from src.core.logging import logger
from src.db import crud
from src.db.database import get_db

def register_mutual_handler(bot):
    @bot.callback_query_handler(func=lambda call: call.data == "mutual_likes")
    def handle_mutual_likes(call):
        try:
            db = next(get_db())
            user = crud.get_user(db, call.from_user.id)

            mutual_likes = crud.get_mutual_likes(db, user.id)

            if not mutual_likes:
                return bot.send_message(call.message.chat.id, "üòî –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –≤–∑–∞–∏–º–Ω—ã—Ö —Å–∏–º–ø–∞—Ç–∏–π")

            for liked_user in mutual_likes:
                send_user_profile(bot, call.message.chat.id, liked_user)
            
        except Exception as e:
            logger.error(f"Error: {e}")
            bot.send_message(call.message.chat.id, "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Å–∏–º–ø–∞—Ç–∏–π")


def send_user_profile(bot, chat_id, user):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ñ–æ—Ç–æ"""
    if not user:
        bot.send_message(chat_id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
        return

    profile_text = format_user_profile(user)
    
    with open(user.photo_path, 'rb') as photo:
        bot.send_photo(
            chat_id=chat_id,
            photo=photo,
            caption=profile_text,
            parse_mode="Markdown"
        )


def format_user_profile(user):
    return f"""
–í–∑–∞–∏–º–Ω–∞—è —Å–∏–º–ø–∞—Ç–∏—è:

    –ò–º—è: {user.name}
    –ì–æ—Ä–æ–¥: {user.city}
    –ü–æ–ª: {user.gender}
    –í–æ–∑—Ä–∞—Å—Ç: {user.age}
    –û —Å–µ–±–µ: {user.description}
"""