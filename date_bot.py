import telebot
import sqlite3

import requests.delete
import telebot.types
import telebot.types.InputMediaPhoto
import unicodedata.lookup


proc_id = 0

i = 0
i_ph = 0

a_l = 2
ankets = []
matches = []
likes = []
list = []
mass_anks = []



# def init_db():
#     conn = sqlite3.connect('shadowlove.db')
#     curs = conn.cursor()
#     curs.execute('''CREATE TABLE IF NOT EXISTS users (
#                     user_id INTEGER PRIMARY KEY,
#                     username TEXT,
#                     sex INT
#                     find_sex INT
#                     city TEXT,
#                     age TEXT,
#                     bio TEXT,
#                     photo1 TEXT DEFAULT NULL,
#                     photo2 TEXT DEFAULT NULL,
#                     photo3 TEXT DEFAULT NULL)''')
#     curs.execute('''CREATE TABLE IF NOT EXISTS likes (
#                         id INTEGER PRIMARY KEY,
#                         like INT)''')
#     curs.execute('''CREATE TABLE IF NOT EXISTS matches (
#                             id INTEGER PRIMARY KEY,
#                             match INT)''')
#     curs.execute('''CREATE TABLE IF NOT EXISTS very_bad (
#                         reported_id INTEGER PRIMARY KEY)''')
#     conn.commit()
#    conn.close()


@bot.message_handler(commands=['start'])

def start_message(message):
    us_id = message.from_user.id
    conn = sqlite3.connect('\date_bot\shadowlove.db')
    curs = conn.cursor()
    curs.execute("SELECT user_id FROM users WHERE user_id = ?", (us_id,))
    t_f = curs.fetchone()
    if t_f:
        bot.send_message(message.chat.id,
                         "–ö–∞–∂–µ—Ç—Å—è, –≤—ã —É–∂–µ –±—ã–ª–∏ —É –Ω–∞—Å")
        show_profile(message)
    else:
        bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤ Shadow Love! –ï—Å–ª–∏ —Ç—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å –∫–∞–∫–æ–π-–ª–∏–±–æ —Å—É–±–∫—É–ª—å—Ç—É—Ä—ã –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —è—Ä–∫–∞—è, –Ω–µ–æ–±—ã—á–Ω–∞—è –ª–∏—á–Ω–æ—Å—Ç—å, —Å—á–∏—Ç–∞–µ—à—å —Å–µ–±—è \"–Ω–µ —Ç–∞–∫–∏–º, –∫–∞–∫ –≤—Å–µ\" –∏ —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏ –ø–æ—Ö–æ–∂–∏—Ö –Ω–∞ —Å–µ–±—è –¥—Ä—É–∑–µ–π –∏–ª–∏ –ª—é–±–æ–≤—å –≤—Å–µ–π –∂–∏–∑–Ω–∏ - —Ç—ã –ø–æ –∞–¥—Ä–µ—Å—É! –î–∞–≤–∞–π –¥–ª—è –Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–¥–∏–º —Ç–≤–æ—é –∞–Ω–∫–µ—Ç—É.",)
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        girl = telebot.types.KeyboardButton("–î–µ–≤—É—à–∫–∞")
        boy = telebot.types.KeyboardButton("–ü–∞—Ä–µ–Ω—å")
        keyboard.add(girl, boy)
        bot.send_message(message.chat.id, "–ö–∞–∫–æ–≥–æ —Ç—ã –ø–æ–ª–∞?" , reply_markup=keyboard)
        bot.register_next_step_handler(message, get_sex)

def get_sex(message):
    us_id = message.from_user.id
    username = message.from_user.first_name

    conn = sqlite3.connect('\date_bot\shadowlove.db')
    curs = conn.cursor()
    if message.text == "–î–µ–≤—É—à–∫–∞":
        curs.execute("""INSERT OR REPLACE INTO users (user_id, username, sex) VALUES (?, ?, ?)""", (us_id, username, 1))
    elif message.text == "–ü–∞—Ä–µ–Ω—å":
        curs.execute("""INSERT OR REPLACE INTO users (user_id, username, sex) VALUES (?, ?, ?)""",(us_id, username, 2))
    else:
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ")
        bot.register_next_step_handler(message, get_sex)
    conn.commit()
    conn.close()

    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    girl = telebot.types.KeyboardButton("–î–µ–≤—É—à–∫–∏")
    boy = telebot.types.KeyboardButton("–ü–∞—Ä–Ω–∏")
    alls = telebot.types.KeyboardButton("–í—Å–µ")
    keyboard.add(girl, boy, alls)
    bot.send_message(message.chat.id, "–ö–∞–∫–æ–π –ø–æ–ª —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω?", reply_markup=keyboard)
    bot.register_next_step_handler(message, get_find_sex)

def get_find_sex(message):
    us_id = message.from_user.id

    conn = sqlite3.connect('\date_bot\shadowlove.db')
    curs = conn.cursor()
    if message.text == "–î–µ–≤—É—à–∫–∏":
        curs.execute("UPDATE users SET find_sex = ? WHERE user_id = ?", (1, us_id))
    elif message.text == "–ü–∞—Ä–Ω–∏":
        curs.execute("UPDATE users SET find_sex = ? WHERE user_id = ?", (2, us_id))
    elif message.text == "–í—Å–µ":
        curs.execute("UPDATE users SET find_sex = ? WHERE user_id = ?", (3, us_id))
    else:
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ")
        bot.register_next_step_handler(message, get_find_sex)
    conn.commit()
    conn.close()

    bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≥–æ—Ä–æ–¥")
    bot.register_next_step_handler(message, get_city)

#–ø–æ–ª—É—á–∏—Ç—å –≥–æ—Ä–æ–¥ –¥–ª—è –∞–Ω–∫–µ—Ç—ã
def get_city(message):
    city = message.text
    us_id = message.from_user.id

    conn = sqlite3.connect('\date_bot\shadowlove.db')
    curs = conn.cursor()
    curs.execute("UPDATE users SET city = ? WHERE user_id = ?""", (city, us_id))
    conn.commit()
    conn.close()

    bot.send_message(message.chat.id, "–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç")
    bot.register_next_step_handler(message, get_age)

#–ø–æ–ª—É—á–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç –¥–ª—è –∞–Ω–∫–µ—Ç—ã
def get_age(message):
    us_id = message.from_user.id

    try:
        age = int(message.text)

        conn = sqlite3.connect('\date_bot\shadowlove.db')
        curs = conn.cursor()
        curs.execute("UPDATE users SET age = ? WHERE user_id = ?", (age, us_id))
        conn.commit()
        conn.close()

        bot.send_message(message.chat.id, "–†–∞—Å—Å–∫–∞–∂–∏ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ")
        bot.register_next_step_handler(message, get_bio)

    except ValueError:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç")
        bot.register_next_step_handler(message, get_age)

#–ø–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–¥–µ–ª –æ —Å–µ–±–µ –¥–ª—è –∞–Ω–∫–µ—Ç—ã
def get_bio(message):
    us_id = message.from_user.id

    bio = message.text

    conn = sqlite3.connect('\date_bot\shadowlove.db')
    curs = conn.cursor()

    curs.execute("UPDATE users SET bio = ? WHERE user_id = ?", (bio, us_id))

    conn.commit()
    conn.close()

    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ –¥–ª—è –∞–Ω–∫–µ—Ç—ã –∏–ª–∏ /next —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
    bot.register_next_step_handler(message, get_photos)

#–ø–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ç–æ –¥–ª—è –∞–Ω–∫–µ—Ç—ã
def get_photos(message):
    us_id = message.from_user.id

    conn = sqlite3.connect('\date_bot\shadowlove.db')
    curs = conn.cursor()
    curs.execute("SELECT photo1, photo2, photo3 FROM users WHERE user_id = ?", (us_id,))
    photos = curs.fetchone()
    ph1, ph2, ph3 = photos

    if message.text and message.text == "/next":
        bot.send_message(message.chat.id, "–ê–Ω–∫–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å, –≤—Å—ë –ª–∏ –≤–µ—Ä–Ω–æ?")
        show_profile(message)

    elif message.photo:
        photo_id = message.photo[-1].file_id
        conn = sqlite3.connect('\date_bot\shadowlove.db')
        curs = conn.cursor()
        curs.execute("SELECT photo1, photo2, photo3 FROM users WHERE user_id = ?", (us_id,))
        photos = curs.fetchone()
        ph1, ph2, ph3 = photos

        if not ph1:
            curs.execute("UPDATE users SET photo1 = ? WHERE user_id = ? ", (photo_id, us_id))
            conn.commit()
        elif not ph2:
            curs.execute("UPDATE users SET photo2 = ? WHERE user_id = ? ", (photo_id, us_id))
            conn.commit()
        elif not ph3:
            curs.execute("UPDATE users SET photo3 = ? WHERE user_id = ? ", (photo_id, us_id))
            conn.commit()
        #else:
        #    bot.send_message(message.chat.id, "–ê–Ω–∫–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å, –≤—Å—ë –ª–∏ –≤–µ—Ä–Ω–æ?")
        #    show_profile(message)
        curs.execute("SELECT photo3 FROM users WHERE user_id = ?", (us_id,))
        photos = curs.fetchone()
        conn.close()
        ph3 = photos
        if not ph3:
            bot.send_message(message.chat.id, "–§–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ! –ú–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â—ë –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –≤–≤–µ–¥—è –∫–æ–º–∞–Ω–¥—É /next")
            bot.register_next_step_handler(message, get_photos)
        else:
            bot.send_message(message.chat.id, "–ê–Ω–∫–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞! –ü—Ä–æ–≤–µ—Ä—å, –≤—Å—ë –ª–∏ –≤–µ—Ä–Ω–æ?")
            show_profile(message)
    else:
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.")
        bot.register_next_step_handler(message, get_photos)

#–ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def show_profile(message):
    conn = sqlite3.connect('\date_bot\shadowlove.db')
    curs = conn.cursor()
    us_id = message.from_user.id

    curs.execute("SELECT username, city, age, bio, photo1, photo2, photo3 FROM users WHERE user_id = ?", (us_id,))
    profile = curs.fetchone()
    conn.close()

    if profile:
        check_keyb = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        edit = telebot.types.KeyboardButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—É")
        delet = telebot.types.KeyboardButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É")
        look = telebot.types.KeyboardButton("üîç –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã")
        backk = telebot.types.KeyboardButton("–ù–∞–∑–∞–¥")
        check_keyb.add(edit, delet, look, backk)

        username, city, age, bio, photo1, photo2, photo3 = profile
        caption = f"–í–æ—Ç –≤–∞—à–∞ –∞–Ω–∫–µ—Ç–∞:\nüë§ {username}\nüìç –ì–æ—Ä–æ–¥: {city}\nüéÇ –í–æ–∑—Ä–∞—Å—Ç: {age}\nüìù –û —Å–µ–±–µ: {bio}"

        media_group = []
        if photo1:
            media_group.append(InputMediaPhoto(photo1, caption=caption))
        if photo2:
            media_group.append(InputMediaPhoto(photo2))
        if photo3:
            media_group.append(InputMediaPhoto(photo3))

        bot.send_message(message.chat.id, "–í–æ—Ç –≤–∞—à–∞ –∞–Ω–∫–µ—Ç–∞", reply_markup=check_keyb)
        if media_group:
            bot.send_media_group(message.chat.id, media_group)
        else:
            bot.send_message(message.chat.id, caption)

        bot.register_next_step_handler(message, start_work)
    else:
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞! –ê–Ω–∫–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")

@bot.message_handler(content_types=['text'])

def start_work(message):
    conn = sqlite3.connect('\date_bot\shadowlove.db')
    curs = conn.cursor()
    us_id = message.from_user.id

    # –ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ—Ñ–∏–ª—è —é–∑–µ—Ä–∞
    if message.text == "üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å":
        conn = sqlite3.connect('\date_bot\shadowlove.db')
        curs = conn.cursor()
        us_id = message.from_user.id

        show_profile(message)

    # –ü—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∫–µ—Ç—ã —é–∑–µ—Ä–∞
    elif message.text == "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—É":
        conn = sqlite3.connect('\date_bot\shadowlove.db')
        curs = conn.cursor()
        us_id = message.from_user.id

        sex_keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        girl = telebot.types.KeyboardButton("–î–µ–≤—É—à–∫–∞")
        boy = telebot.types.KeyboardButton("–ü–∞—Ä–µ–Ω—å")
        sex_keyboard.add(girl, boy)
        bot.send_message(message.chat.id, "–ö–∞–∫–æ–≥–æ —Ç—ã –ø–æ–ª–∞?", reply_markup=sex_keyboard)
        bot.register_next_step_handler(message, get_sex)

    # –£–¥–∞–ª–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã —é–∑–µ—Ä–∞
    elif message.text == "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É":
        conn = sqlite3.connect('\date_bot\shadowlove.db')
        curs = conn.cursor()
        us_id = message.from_user.id

        curs.execute("DELETE FROM users WHERE user_id = ?", (us_id,))
        bot.send_message(message.chat.id, "–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ —É–¥–∞–ª–µ–Ω–∞, —Å –Ω–µ—Ç–µ—Ä–ø–µ–Ω–∏–µ–º –∂–¥–µ–º —Ç–µ–±—è —Å–Ω–æ–≤–∞")

        curs.execute("SELECT id FROM likes WHERE id = ?", (us_id,))
        del_1 = [row[0] for row in curs.fetchall()]
        if del_1:
            curs.execute("DELETE FROM likes WHERE id =?", (us_id,))
            conn.commit()

        curs.execute("SELECT id FROM likes WHERE like = ?", (us_id,))
        del_1 = [row[0] for row in curs.fetchall()]
        if del_1:
            curs.execute("DELETE FROM likes WHERE like =?", (us_id,))
            conn.commit()


        curs.execute("SELECT id FROM matches WHERE id = ?", (us_id,))
        del_1 = [row[0] for row in curs.fetchall()]
        if del_1:
            curs.execute("DELETE FROM matches WHERE id =?", (us_id,))
            conn.commit()

        curs.execute("SELECT id FROM matches WHERE match = ?", (us_id,))
        del_1 = [row[0] for row in curs.fetchall()]
        if del_1:
            curs.execute("DELETE FROM matches WHERE match =?", (us_id,))
            conn.commit()

        conn.close()

        bot.stop_bot()

    # –ü—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∫–µ—Ç
    elif message.text == "üîç –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã":
        conn = sqlite3.connect('\date_bot\shadowlove.db')
        curs = conn.cursor()
        us_id = message.from_user.id

        curs.execute("SELECT sex, find_sex, city FROM users WHERE user_id = ?", (us_id,))
        find = curs.fetchone()
        sex, find_sex, city = find

        if find_sex != 3:
            curs.execute("SELECT user_id FROM users WHERE user_id != ? AND sex = ? AND find_sex = ? AND city = ?", (us_id, find_sex, sex, city))
            global mass_anks
            mass_anks = [row[0] for row in curs.fetchall()]
            ankets = [row[0] for row in curs.fetchall()]
        else:
            curs.execute("SELECT user_id FROM users WHERE (find_sex = ? OR find_sex = 3) AND user_id != ? AND city = ?", (sex, us_id, city))
            mass_anks = [row[0] for row in curs.fetchall()]
            ankets = [row[0] for row in curs.fetchall()]
        show_ankets(message, mass_anks)

        # –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–∞–π–∫–∏ –¥—Ä—É–≥–∏—Ö —é–∑–µ—Ä–æ–≤
    elif message.text == "üíñ –õ–∞–π–∫–∏":
        conn = sqlite3.connect('\date_bot\shadowlove.db')
        curs = conn.cursor()
        us_id = message.from_user.id

        curs.execute("SELECT id FROM likes WHERE like = ?", (us_id,))
        global likes
        mass_anks = [row[0] for row in curs.fetchall()]
        likes = [row[0] for row in curs.fetchall()]
        show_ankets(message, mass_anks)

        # –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –º–µ—Ç—á–∏
    elif message.text == "üíû –ú–µ—Ç—á–∏":
        global i
        i = 0
        conn = sqlite3.connect('\date_bot\shadowlove.db')
        curs = conn.cursor()
        us_id = message.from_user.id

        curs.execute("SELECT match FROM matches WHERE id = ?", (us_id,))
        global matches
        matches = [row[0] for row in curs.fetchall()]
        conn.close()

        show_matches(message)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª–∞–π–∫–æ–≤
    elif message.text == "‚ù§Ô∏è":
        conn = sqlite3.connect('\date_bot\shadowlove.db')
        curs = conn.cursor()
        us_id = message.from_user.id

        curs.execute("SELECT like FROM likes WHERE id = ?", (us_id,))
        like_n = [row[0] for row in curs.fetchall()]  # –∫–æ–≥–æ –ª–∞–π–∫–∞–ª n
        curs.execute("SELECT like FROM likes WHERE id = ?", (proc_id,))
        like_m = [row[0] for row in curs.fetchall()]  # –∫–æ–≥–æ –ª–∞–π–∫–∞–ª m
        if proc_id not in like_n and us_id not in like_m:
            curs.execute("""INSERT OR REPLACE INTO likes (id, like) VALUES (?, ?)""",(us_id, proc_id))
            conn.commit()
        elif proc_id not in like_n and us_id in like_m:
            curs.execute("SELECT match FROM matches WHERE id = ?", (us_id,))
            match_n = [row[0] for row in curs.fetchall()]  # –º–µ—Ç—á–∏ n
            curs.execute("SELECT match FROM matches WHERE id = ?", (proc_id,))
            match_m = [row[0] for row in curs.fetchall()]  # –º–µ—Ç—á–∏ m
            if us_id not in match_m and proc_id not in match_n:
                curs.execute("""INSERT OR REPLACE INTO matches (id, match) VALUES (?, ?)""",(us_id, proc_id))
                conn.commit()
                curs.execute("""INSERT OR REPLACE INTO matches (id, match) VALUES (?, ?)""",(proc_id, us_id))
                conn.commit()
                curs.execute("DELETE FROM likes WHERE id = ? AND like = ?", (proc_id, us_id))
        conn.close()
        show_ankets(message, mass_anks)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∏–∑–ª–∞–π–∫–æ–≤
    elif message.text == "üëé":
        conn = sqlite3.connect('\date_bot\shadowlove.db')
        curs = conn.cursor()
        us_id = message.from_user.id

        curs.execute("SELECT like FROM likes WHERE id = ?", (us_id,))
        like_n = [row[0] for row in curs.fetchall()]  # –∫–æ–≥–æ –ª–∞–π–∫–∞–ª n
        curs.execute("SELECT like FROM likes WHERE id = ?", (proc_id,))
        like_m = [row[0] for row in curs.fetchall()]  # –∫–æ–≥–æ –ª–∞–π–∫–∞–ª m
        if proc_id not in like_n and us_id in like_m:
            curs.execute("DELETE FROM likes WHERE id = ? AND like = ?", (proc_id, us_id))
            conn.commit()
        conn.close()

        show_ankets(message, mass_anks)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∂–∞–ª–æ–±
    elif message.text == "üö´":
        conn = sqlite3.connect('\date_bot\shadowlove.db')
        curs = conn.cursor()
        us_id = message.from_user.id

        curs.execute("""INSERT OR REPLACE INTO very_bad (id) VALUES (?)""", (proc_id))

        curs.execute("SELECT like FROM likes WHERE id = ?", (us_id))
        like_n = [row[0] for row in curs.fetchall()]  # –∫–æ–≥–æ –ª–∞–π–∫–∞–ª n
        curs.execute("SELECT like FROM likes WHERE id = ?", (proc_id))
        like_m = [row[0] for row in curs.fetchall()]  # –∫–æ–≥–æ –ª–∞–π–∫–∞–ª m
        # –µ—Å–ª–∏ m –ª–∞–π–∫–∞–ª n –ò n –Ω–µ –ª–∞–π–∫–∞–ª m - —É–¥–∞–ª—è–µ–º n –∏–∑ –ª–∞–π–∫–æ–≤ m
        if us_id in like_m and proc_id not in like_n:
            curs.execute("DELETE FROM likes WHERE id = ? AND WHERE like = ?", (proc_id, us_id))
            conn.commit()
        # –∏–Ω–∞—á–µ –Ω–∏—á–µ–≥–æ –¥–µ–ª–∞—Ç—å –Ω–µ –Ω–∞–¥–æ
        conn.close()


        show_ankets(message, mass_anks)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥
    elif message.text == "–ù–∞–∑–∞–¥":
        conn = sqlite3.connect('\date_bot\shadowlove.db')
        curs = conn.cursor()
        us_id = message.from_user.id

        main_menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        my_profile = telebot.types.KeyboardButton("üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
        likes = telebot.types.KeyboardButton("üíñ –õ–∞–π–∫–∏")
        matches_bt = telebot.types.KeyboardButton("üíû –ú–µ—Ç—á–∏")
        look = telebot.types.KeyboardButton("üîç –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã")
        main_menu.add(my_profile, likes, matches_bt, look)

        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ‚¨áÔ∏è", reply_markup=main_menu)
        bot.register_next_step_handler(message, start_work)


    # –ü—Ä–µ–¥ –º—ç—Ç—á
    elif message.text == "üîô":
        i -= 1
        show_matches(message)

    # –°–ª–µ–¥ –º—ç—Ç—á
    elif message.text == "üîú":
        i += 1
        show_matches(message)

    # –£–¥–∞–ª –º—ç—Ç—á
    elif message.text == "‚ùåÔ∏è –£–¥–∞–ª–∏—Ç—å –º—ç—Ç—á":
        matches.pop(i)
        curs.execute("DELETE FROM matches WHERE id = ? AND WHERE match = ?", (us_id, proc_id))
        curs.execute("DELETE FROM matches WHERE id = ? AND WHERE match = ?", (proc_id, us_id))
        conn.commit()
        conn.close()
        show_matches(message)

    else:
        main_menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        my_profile = telebot.types.KeyboardButton("üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
        likes_bt = telebot.types.KeyboardButton("üíñ –õ–∞–π–∫–∏")
        matches_bt = telebot.types.KeyboardButton("üíû –ú–µ—Ç—á–∏")
        look = telebot.types.KeyboardButton("üîç –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã")
        main_menu.add(my_profile, likes_bt, matches_bt, look)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ‚¨áÔ∏è", reply_markup=main_menu)
        bot.register_next_step_handler(message, start_work)



# –ü—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∫–µ—Ç (–ª–∞–π–∫–∏, –ø–æ –≥–æ—Ä–æ–¥—É)
def show_ankets(message, massive):
    conn = sqlite3.connect('\date_bot\shadowlove.db')
    curs = conn.cursor()
    us_id = message.from_user.id


    main_menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    my_profile = telebot.types.KeyboardButton("üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
    likes_bt = telebot.types.KeyboardButton("üíñ –õ–∞–π–∫–∏")
    matches_bt = telebot.types.KeyboardButton("üíû –ú–µ—Ç—á–∏")
    look = telebot.types.KeyboardButton("üîç –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã")
    main_menu.add(my_profile, likes_bt, matches_bt, look)

    if len(massive) != 0:
        global proc_id
        proc_id = massive[0]
        massive.pop(0)
        curs.execute("SELECT username, city, age, bio, photo1, photo2, photo3 FROM users WHERE user_id = ?", (proc_id,))
        profile = curs.fetchone()
        username, city, age, bio, photo1, photo2, photo3 = profile
        caption = f"üë§ {username}\nüìç –ì–æ—Ä–æ–¥: {city}\nüéÇ –í–æ–∑—Ä–∞—Å—Ç: {age}\nüìù –û —Å–µ–±–µ: {bio}"

        media_group = []
        if photo1:
            media_group.append(InputMediaPhoto(photo1, caption=caption))
        if photo2:
            media_group.append(InputMediaPhoto(photo2))
        if photo3:
            media_group.append(InputMediaPhoto(photo3))

        like_menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        like = telebot.types.KeyboardButton("‚ù§Ô∏è")
        dislike = telebot.types.KeyboardButton("üëé")
        report = telebot.types.KeyboardButton("üö´")
        backk = telebot.types.KeyboardButton("–ù–∞–∑–∞–¥")
        like_menu.add(like, dislike, report, backk)

        bot.send_message(message.chat.id, "...", reply_markup=like_menu)
        if media_group:
            bot.send_media_group(message.chat.id, media_group)
            bot.register_next_step_handler(message, start_work)
        else:
            bot.send_message(message.chat.id, caption)
            bot.register_next_step_handler(message, start_work)
    else:
        bot.send_message(message.chat.id, "–ù–∏—á–µ–≥–æ –±–æ–ª—å—à–µ –Ω–µ—Ç :(", reply_markup=main_menu)
        bot.register_next_step_handler(message, start_work)

# –ü—Ä–æ—Å–º–æ—Ç—Ä –º–µ—Ç—á–µ–π
def show_matches(message):
    conn = sqlite3.connect('\date_bot\shadowlove.db')
    curs = conn.cursor()
    us_id = message.from_user.id

    main_menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    my_profile = telebot.types.KeyboardButton("üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
    likes_bt = telebot.types.KeyboardButton("üíñ –õ–∞–π–∫–∏")
    matches_bt = telebot.types.KeyboardButton("üíû –ú–µ—Ç—á–∏")
    look = telebot.types.KeyboardButton("üîç –°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã")
    main_menu.add(my_profile, likes_bt, matches_bt, look)


    if matches and i < len(matches):

        global proc_id
        proc_id = matches[i - 1]
        curs.execute("SELECT username, city, age, bio, photo1, photo2, photo3 FROM users WHERE user_id = ?", (proc_id,))
        profile = curs.fetchone()
        username, city, age, bio, photo1, photo2, photo3 = profile
        caption = f"üë§ {username}\nüìç –ì–æ—Ä–æ–¥: {city}\nüéÇ –í–æ–∑—Ä–∞—Å—Ç: {age}\nüìù –û —Å–µ–±–µ: {bio}\n\n –ù–∞–ø–∏—Å–∞—Ç—å: @{bot.get_chat(proc_id).username}"
        media_group = []
        if photo1:
            media_group.append(InputMediaPhoto(photo1, caption=caption))
        if photo2:
            media_group.append(InputMediaPhoto(photo2))
        if photo3:
            media_group.append(InputMediaPhoto(photo3))

        match_menu = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        prev = telebot.types.KeyboardButton("Ô∏èüîô")
        _next = telebot.types.KeyboardButton("üîú")
        _del = telebot.types.KeyboardButton("‚ùåÔ∏è –£–¥–∞–ª–∏—Ç—å –º—ç—Ç—á")
        backk = telebot.types.KeyboardButton("–ù–∞–∑–∞–¥")
        if len(matches) != 1:
            if i == 0:
                match_menu.add(_next, _del, backk)
            elif i == len(matches) - 1:
                match_menu.add(prev, _del, backk)
            else:
                match_menu.add(prev, _next, _del, backk)
        else:
            match_menu.add(_del, backk)

        bot.send_message(message.chat.id, "...", reply_markup=match_menu)
        if media_group:
            bot.send_media_group(message.chat.id, media_group)
        else:
            bot.send_message(message.chat.id, caption)
        bot.register_next_step_handler(message, start_work)
    else:
        bot.send_message(message.chat.id, "–ù–∏—á–µ–≥–æ –±–æ–ª—å—à–µ –Ω–µ—Ç :(", reply_markup=main_menu)
        bot.register_next_step_handler(message, start_work)



if __name__ == '__main__':
    init_db()
    bot.polling(none_stop=True)